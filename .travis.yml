# Travis CI configuration for Vitess.
#
# Note that we have our own test runner written in Go (test.go) which downloads
# our bootstrap Docker image and runs all tests within Docker.
# Therefore, we do not have to install (and cache) any dependencies within
# Travis itself.
#
# Open TODOs:
# - Re-add travis/check_make_proto.sh, ideally as part of test/config.json.
# - Make the webdriver test work again. May not work within a Docker image?

# sudo is required because we run Docker in our builds.
# See: https://docs.travis-ci.com/user/docker/
sudo: required

services:
  - docker

# TODO(mberlin): Consider to cache the Maven cache ($HOME/.m2) again.
language: go
go:
  - 1.8
go_import_path: github.com/youtube/vitess
env:
  global:
    # Enable parallel compilation e.g. for gRPC.
    # (The Travis CI worker is allowed to use up to 2 cores, but as of 07/2015 4 parallel compilations is actually faster.)
    # TODO(mberlin): Verify that a) this will be passed through to Docker and
    # b) that this value is still the best value for Travis new
    # VM based infrastructure.
    - MAKEFLAGS=-j4
    # Run go build and test with -p 4 (i.e. up to 4 packages are compiled/tested in parallel).
    # As of 07/2015 this value works best in a Travis CI container.
    # TODO(mberlin): Same as above for MAKEFLAGS. Also, this work around may no
    # longer be necessary when Go detects the correct number of cores.
    - VT_GO_PARALLEL_VALUE=4
    - PATH="$HOME/.phpenv/bin:$PATH"
    # Note: The per test timeout must always be < 10 minutes because test.go
    #       does not produce any log output while running and Travis kills a
    #       build after 10 minutes without log output.
    #       See: https://docs.travis-ci.com/user/customizing-the-build#Build-Timeouts
    # To diagnose stuck tests, add "-follow" to TEST_FLAGS below. Then test.go
    # will print the test's output.
    - TEST_FLAGS="-docker -timeout=8m -print-log -remote-stats=http://enisoc.com:15123/travis/stats"
  matrix:
    # NOTE: Travis CI schedules up to 5 tests simultaneously.
    #       All our tests should be spread out as evenly as possible across these 5 slots.
    #       We should always utilize all 5 slots because the cost of the setup is high (up to one minute).
    # - TEST_MATRIX="unit"
    - TEST_MATRIX="-shard 0"
    - TEST_MATRIX="-shard 1"
    - TEST_MATRIX="-shard 2"
    - TEST_MATRIX="-shard 3"
    - TEST_MATRIX="-shard 4"
script:
  # Log GOMAXPROCS (should be 2 as of 07/2015).
  # TODO(mberlin): Update the comment here.
  - ./docker/test/run.sh mysql57 'go run travis/log_gomaxprocs.go'
  - go run test.go $TEST_FLAGS $TEST_MATRIX
after_failure:
  # TODO(mberlin): Adjust this after the switch to using Docker.
  # In case of errors, output log files to make it easier to debug the error.
  # List all available files.
  - ls -alR _test/
  # Output *.log* and *.stderr files. (Add -keep-data to TEST_FLAGS above or tests will delete their logs.)
  - find _test/ \( -name "*.log*" -or -name "*.stderr" \) -type f -print0 | xargs -0r --verbose --max-args=1 cat
notifications:
  slack:
    secure: S9n4rVWuEvSaF9RZUIx3Nkc2ycpM254zmalyMMbT5EmV1Xz6Zww2FL39RR5d57zsZ2M8GVW5n9uB8Bx57mr+L/wClEltzknYr7MA2/yYNMo5iK83tdQtNNw5U+dZG9/Plhlm4n883lcw9aZOyotNcLg2zBsd48Y74olk4NdmSfo=
